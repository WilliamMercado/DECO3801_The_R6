div header h1 {
    color: black;
}

/* User home page styling */
.user-home {
    font-family: Arial, sans-serif; /* Set font style */
    text-align: center; /* Center align all text */
}

/* Header section styling */
.user-home-header {
    background-size: cover; /* Ensure background covers the entire section */
    background-position: center; /* Center the background image */
    padding: 100px; /* Add padding around the content */
    text-align: center; /* Center align the content */
    color: black; /* Set text color */
    font-size: small; /* Use small font size */
    width: 100%; /* Set header width to 100% */
    min-height: 700px; /* Minimum height for the header */
}

/* Content section styling */
.user-home-content {
    margin-bottom: 20px; /* Add space below the content section */
}

/* User works list styling */
.user-works ul {
    list-style-type: none; /* Remove default list style */
    padding: 0; /* Remove padding */
}

.user-works li {
    margin: 10px 0; /* Add margin between list items */
}

/* Section heading text styling */
h4 {
    font-family: cursive; /* Cursive font style */
    font-size: 4em; /* Large font size for the heading */
    color: black; /* Set heading text color to black */
    font-weight: bold; /* Make the heading bold */
}

/* User options section styling */
.user-options {
    display: flex; /* Use flexbox for layout */
    justify-content: center; /* Center align the items */
    gap: 90px; /* Space between items */
}

/* Button styling */
.button {
    padding: 8px 20px; /* Padding for the button */
    border: 2px solid white; /* White border */
    border-radius: 20px; /* Rounded corners */
    background-color: black; /* Black background color */
    color: white; /* White text color */
    font-size: 16px; /* Button font size */
    cursor: pointer; /* Pointer cursor on hover */
    transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s ease; /* Smooth transitions */
}

/* Button hover effect */
.button:hover {
    background-color: white; /* Change background to white on hover */
    color: black; /* Change text color to black on hover */
    transition: box-shadow 0.3s ease; /* Add shadow transition */
    box-shadow: 0 0 8px rgb(0, 0, 0); /* Shadow effect on hover */
}

/* Margin for user works section */
.user-works {
    margin-top: 50px; /* Add margin to the top of the user works section */
}

/* User avatar container styling */
.user-avatar-container {
    display: flex; /* Use flexbox for layout */
    justify-content: center; /* Center align the avatar */
    margin-bottom: 20px; /* Add margin below the avatar */
}

/* User avatar styling */
.user-avatar {
    width: 100px; /* Set avatar width */
    height: 100px; /* Set avatar height */
    border-radius: 50%; /* Make avatar circular */
    object-fit: cover; /* Ensure the avatar fits within the container */
    border: 3px solid white; /* White border around the avatar */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Add a shadow around the avatar */
}

/* Save icon styling */
.save-icon {
    transform: translateY(-50%); /* Center vertically */
    width: 24px; /* Set icon width */
    cursor: pointer; /* Pointer cursor on hover */
    margin-top: 25px; /* Add margin to the top */
    position: absolute; /* Position the icon absolutely */
    top: -9px; /* Set the top position */
    right: 1px; /* Set the right position */
}

/* Image container styling */
.image-cell {
    display: inline-block; /* Align images in columns */
    margin-bottom: 20px; /* Add space below each image */
    width: 100%; /* Ensure the container takes full width */
    position: relative; /* Relative positioning for the container */
}

/* Masonry layout for image results */
.image-grid {
    column-count: 3; /* Three columns for the image grid */
    column-gap: 20px; /* Gap between columns */
    margin: 20px auto; /* Center the grid and add margin */
    width: 50%; /* Set grid width to 50% */
}

/* Ensure images fit within their container */
.image-cell {
    display: inline-block; /* Align images in columns */
    margin-bottom: 20px; /* Space below each image */
    width: 100%; /* Ensure the container takes full width */
}

.image-grid .image-cell .results {
    width: 100%; /* Make sure images fit inside their containers */
    display: block; /* Remove inline spacing */
    margin: 0 auto; /* Center images horizontally */
}

/* Responsive design for different screen sizes */

/* For screens smaller than 1400px */
@media (max-width: 1400px) {
    .image-grid {
        width: 70%; /* Reduce grid width to 70% */
    }
}

/* For screens smaller than 1000px */
@media (max-width: 1000px) {
    .image-grid {
        width: 80%; /* Reduce grid width to 80% */
    }
}

/* For screens smaller than 800px */
@media (max-width: 800px) {
    .image-grid {
        width: 90%; /* Reduce grid width to 90% */
    }
}

*, *:before, *:after {
  position: relative;
  box-sizing: border-box;
}

.like-wrapper, .ripple, .heart {
    pointer-events: none;
}

:root {
  --color-bg: #FDF1F2;
  --color-heart: #EA442B;
  --easing: cubic-bezier(.7,0,.3,1);
  --duration: .5s;
}

.like-button {
  font-size: 50px; /* Size of the button */
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  border-radius: 50%;
  background: white;
  width: 1em;
  height: 1em;
  padding: 0;
  margin: 0;
  outline: none;
  z-index: 2;
  -webkit-transition: -webkit-transform var(--duration) var(--easing);
  transition: -webkit-transform var(--duration) var(--easing);
  transition: transform var(--duration) var(--easing);
  transition: transform var(--duration) var(--easing), -webkit-transform var(--duration) var(--easing);
  transform: translateY(-50%); /* Center vertically */
  cursor: pointer; /* Pointer cursor on hover */
  margin-top: 25px; /* Add margin to the top */
  position: absolute; /* Position the icon absolutely */
  top: 5px; /* Set the top position */
  right: 5px; /* Set the right position */
}
.like-button:before {
  z-index: -1;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-shadow: 0 0.3em 0.6em rgba(0, 0, 0, 0.3);
  border-radius: inherit;
  -webkit-transition: inherit;
  transition: inherit;
}
.like-button:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fff;
  border-radius: inherit;
  z-index: -1;
}
.like-button:active:before {
  -webkit-animation: depress-shadow var(--duration) var(--easing) both;
          animation: depress-shadow var(--duration) var(--easing) both;
}
.like-button:focus:after {
  -webkit-animation: depress var(--duration) var(--easing) both;
          animation: depress var(--duration) var(--easing) both;
}
@-webkit-keyframes depress {
  from, to {
    -webkit-transform: none;
            transform: none;
  }
  50% {
    -webkit-transform: translateY(5%) scale(0.9);
            transform: translateY(5%) scale(0.9);
  }
}
@keyframes depress {
  from, to {
    -webkit-transform: none;
            transform: none;
  }
  50% {
    -webkit-transform: translateY(5%) scale(0.9);
            transform: translateY(5%) scale(0.9);
  }
}
@-webkit-keyframes depress-shadow {
  from, to {
    -webkit-transform: none;
            transform: none;
  }
  50% {
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
  }
}
@keyframes depress-shadow {
  from, to {
    -webkit-transform: none;
            transform: none;
  }
  50% {
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
  }
}
.like-wrapper {
  display: grid;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: center;
          justify-content: center;
  z-index: 1;
}
.like-wrapper > * {
  margin: auto;
  grid-area: 1 / 1;
}

.heart {
  width: .5em;
  height: .5em;
  display: block;
  -webkit-transform-origin: center 80%;
          transform-origin: center 80%;
}
.heart > path {
  stroke: var(--color-heart);
  stroke-width: 2;
  fill: transparent;
  -webkit-transition: fill var(--duration) var(--easing);
  transition: fill var(--duration) var(--easing);
}
.like-button:focus .heart > path {
  fill: var(--color-heart);
}
.like-button:focus .heart {
  -webkit-animation: heart-bounce var(--duration) var(--easing);
          animation: heart-bounce var(--duration) var(--easing);
}
@-webkit-keyframes heart-bounce {
  40% {
    -webkit-transform: scale(0.7);
            transform: scale(0.7);
  }
  0%, 80%, 100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
@keyframes heart-bounce {
  40% {
    -webkit-transform: scale(0.7);
            transform: scale(0.7);
  }
  0%, 80%, 100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
/* Added wrapper to prevent layout jank with resizing particles */
.particles {
  width: 1px;
  height: 1px;
}

.particle {
  position: absolute;
  top: 0;
  left: 0;
  height: .1em;
  width: .1em;
  border-radius: .05em;
  background-color: var(--color);
  --percentage: calc( var(--i) / var(--total-particles) );
  --Θ: calc( var(--percentage) * 1turn );
  -webkit-transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0) scaleY(0);
          transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0) scaleY(0);
  -webkit-transition: all var(--duration) var(--easing);
  transition: all var(--duration) var(--easing);
}
.like-button:focus .particle {
  -webkit-animation: particles-out calc(var(--duration) * 1.2) var(--easing) forwards;
          animation: particles-out calc(var(--duration) * 1.2) var(--easing) forwards;
}
@-webkit-keyframes particles-out {
  50% {
    height: .3em;
  }
  50%, 60% {
    height: .3em;
    -webkit-transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0.8em) scale(1);
            transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0.8em) scale(1);
  }
  60% {
    height: .2em;
  }
  100% {
    -webkit-transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(1em) scale(0);
            transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(1em) scale(0);
  }
}
@keyframes particles-out {
  50% {
    height: .3em;
  }
  50%, 60% {
    height: .3em;
    -webkit-transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0.8em) scale(1);
            transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(0.8em) scale(1);
  }
  60% {
    height: .2em;
  }
  100% {
    -webkit-transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(1em) scale(0);
            transform: translate(-50%, -50%) rotate(var(--Θ)) translateY(1em) scale(0);
  }
}
.ripple {
  height: 1em;
  width: 1em;
  border-radius: 50%;
  overflow: hidden;
  z-index: 1;
}
.ripple:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0.4em solid var(--color-heart);
  border-radius: inherit;
  -webkit-transform: scale(0);
          transform: scale(0);
}
.like-button:focus .ripple:before {
  -webkit-animation: ripple-out var(--duration) var(--easing);
          animation: ripple-out var(--duration) var(--easing);
}
@-webkit-keyframes ripple-out {
  from {
    -webkit-transform: scale(0);
            transform: scale(0);
  }
  to {
    -webkit-transform: scale(5);
            transform: scale(5);
  }
}
@keyframes ripple-out {
  from {
    -webkit-transform: scale(0);
            transform: scale(0);
  }
  to {
    -webkit-transform: scale(5);
            transform: scale(5);
  }
}
body {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  background-color: var(--color-bg);
}

/* Reset the animation when clicking again! */
.like-button:focus {
  pointer-events: none;
  cursor: normal;
}
